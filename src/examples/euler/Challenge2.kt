package examples.euler

import kotlin.system.measureTimeMillis

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 *
 * Created by kenlanderson on 4/25/16.
 */

internal val MAXC2 = 4000000

fun main(args: Array<String>) {
    // reducing given sequence to evens we see (0),2,8,34,144
    // so the sequence can be generated using formula f(n)=4*f(n-1)+f(n-2).
    val benchMark = measureTimeMillis {
        var fn = 8
        var fn1 = 2
        var fn2 = 0
        var sum = fn1 + fn2

        while (fn < MAXC2) {
            sum += fn
            fn2 = fn1
            fn1 = fn
            fn = 4 * fn1 + fn2
        }

        println("The sum is $sum")
    }
    print("Process completed in $benchMark milliseconds")
}